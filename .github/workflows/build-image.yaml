name: Create and publish a Docker image

on:
  workflow_call:
    outputs:
      image:
        description: 'The image that was built'
        value: ${{ jobs.build-and-push-image.outputs.image }}

    inputs:
      runs-on:
        description: 'The type of machine to run the job on'
        required: false
        type: string
        default: ubuntu-latest
      registry:
        description: 'The registry to push the image to'
        required: false
        type: string
        default: registry.hub.docker.com
      image:
        description: 'The name of the image'
        required: true
        type: string
      tags:
        description: 'The versions of the image'
        required: false
        type: string
        default: latest
      build-args:
        description: 'The build arguments for the image'
        required: false
        type: string
        default: ''

    secrets:
      DOCKER_USERNAME:
        description: 'Username for the registry'
        required: true
      DOCKER_PASSWORD:
        description: 'Password for the registry'
        required: true
      SSH_PRIVATE_KEY:
        description: 'ssh private key'
        required: false
      build-args:
        description: 'The build arguments for the image(contain credentials))'
        required: false
      github-token:
        description: 'The build arguments for the image(contain credentials))'
        required: false

jobs:
  build-and-push-image:
    runs-on: ${{ inputs.runs-on }}

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.github-token || github.token }}
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Render tags
        id: render
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "tags<<$EOF" >> $GITHUB_OUTPUT
          awk -F ',' '{ for( i=1; i<=NF; i++ ) print "type=raw,value=" $i }' <<< "${{ inputs.tags }}" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.registry }}/${{ inputs.image }}
          tags: |
            ${{ steps.render.outputs.tags }}

      - name: Set up SSH
        run: |
          if ${{ secrets.SSH_PRIVATE_KEY == '' }}
          then
            ssh-keygen -o -a 100 -t ed25519 -f ~/.ssh/id_ed25519 -q -N ""
            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "SSH_PRIVATE_KEY<<$EOF" >> "$GITHUB_ENV"
            cat ~/.ssh/id_ed25519 >> "$GITHUB_ENV"
            echo "$EOF" >> "$GITHUB_ENV"
          fi

      - uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          ssh: |
            ssh_private_key=${{ env.SSH_AUTH_SOCK }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            ${{ inputs.build-args }}
            ${{ secrets.build-args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Summary
        run: |
          echo '## Built Image' >> $GITHUB_STEP_SUMMARY
          echo '- tag: `${{ steps.meta.outputs.tags }}`' >> $GITHUB_STEP_SUMMARY

    outputs:
      image: ${{ steps.meta.outputs.tags }}
